{"version":3,"file":"component---src-pages-jam-tsx-4cf4d3334058060ebf47.js","mappings":"iOAQe,SAASA,EAAT,GAAiG,IAAzDC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,SAC/D,OAAOC,EAAAA,EAAAA,KAAAA,EAAAA,SAAAA,CAAAA,UAAGC,EAAAA,EAAAA,MAAiBH,EAAWC,GACvC,C,2GCIc,SAASG,EAAT,GAA2E,IAA5DC,EAA2D,EAA3DA,UAAWL,EAAgD,EAAhDA,SAAUM,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,SAC1DC,EAAYC,IAApB,GACMC,GAAmBC,EAAAA,EAAAA,GAAQN,EAAS,CACxCO,KAAMJ,EAAQK,gBACdC,OAAQN,EAAQO,kBAChBC,MAAOR,EAAQS,iBACf,gBAAiBT,EAAQU,0BAGrBC,GAAgBC,EAAAA,EAAAA,GACpBZ,EAAQa,IACRf,GAAUE,EAAQc,SAClBf,GAAYC,EAAQe,WACpBb,EACAN,GAGF,OACEH,EAAAA,EAAAA,KAAAA,MAAAA,CAAKG,UAAWe,EAAhB,SACGpB,GAKP,CAAO,IAAMU,GAAee,EAAAA,EAAAA,IAAkB,kBAAgB,CAC5DH,IAAK,CACHI,QAAQ,OACRC,cAAc,MACdC,WAAW,SAEX,QAAS,CACPC,OAAQ,IAIZf,gBAAiB,CACfgB,eAAe,QAEjBd,kBAAmB,CACjBc,eAAe,UAEjBZ,iBAAkB,CAChBY,eAAe,SAEjBX,wBAAyB,CACvBW,eAAe,iBAGjBP,SAAU,CACRQ,IAzB0C,EAAGC,MAyBlCC,QAAQC,MAGrBV,WAAY,CACVW,SAAS,QA7B+B,IC/B7B,SAASC,EAAT,GAAsF,IAA7D/B,EAA4D,EAA5DA,UAAWgC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,SACnE,OAAOrC,EAAAA,EAAAA,KAAAA,MAAAA,CAAKG,UAAWA,EAAWmC,IAAG,sCAAwCF,EAAxC,IAAkDC,EAAlD,iBAA4EE,IAAQJ,EAAL,aACrH,C,gCCEc,SAASK,EAAT,GAA2E,IAAlDrC,EAAiD,EAAjDA,UAAWsC,EAAsC,EAAtCA,MAAO3C,EAA+B,EAA/BA,SAChDS,EAAYmC,IAApB,GAEA,OAAO1C,EAAAA,EAAAA,KAAAA,MAAAA,CAAKG,WAAWgB,EAAAA,EAAAA,GAAIZ,EAAQoC,cAAexC,GAAasC,MAAOA,EAA/D,SAAuE3C,GAGhF,CAAO,IAAM4C,GAAyBnB,EAAAA,EAAAA,IAAkB,kBAAgB,CACtEoB,cAAe,CACb,mBAAoB,CAClBC,UAAW,GAEb,kBAAmB,CACjBC,aAAc,GAEhB,QAAS,CACPA,aATkD,EAAGf,MASjCC,QAAQC,OAToB,ICCvC,SAASc,EAAT,GAA8F,IAA5E3C,EAA2E,EAA3EA,UAAWsC,EAAgE,EAAhEA,MAAO3C,EAAyD,EAAzDA,SAAUiD,EAA+C,EAA/CA,iBAAkBC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,OAC5E1C,EAAY2C,IAApB,GAEMC,GAAuBJ,GAAoC,OAAhBA,EAC3CK,GAA4B1C,EAAAA,EAAAA,GAAQqC,EAAkB,CAC1DM,IAAK9C,EAAQ+C,yBACbzC,OAAQN,EAAQgD,4BAChBC,OAAQjD,EAAQkD,8BAGZC,GAAgBvC,EAAAA,EAAAA,GACpBZ,EAAQoD,OACRV,GAAU1C,EAAQqD,SAClBZ,GAASzC,EAAQsD,UACjBT,EACAjD,GAUF,OAPI6C,IACFP,IAAAA,EAAU,CAAC,GAEP,SAASqB,KAAMd,GAASP,EAAMsB,SAAWC,OAAQhB,EAAMiB,MAAO,OAAU,IAAQ,IAC/ExB,EAAMyB,UAAYlB,GAGrBG,GACFnD,EAAAA,EAAAA,KAACwC,EAAD,CAAerC,UAAWuD,EAAejB,MAAOA,EAAhD,SACG3C,KAKHE,EAAAA,EAAAA,KAAAA,MAAAA,CAAKG,UAAWuD,EAAejB,MAAOA,EAAtC,UACEzC,EAAAA,EAAAA,KAACwC,EAAD,UACG1C,KAMT,KAAMoD,GAAY3B,EAAAA,EAAAA,IAAkB,oBAAGO,EAAH,EAAGA,MAAH,MAAgB,CAClD6B,QAAM,GACJnC,QAAQ,SADJ,EAGFM,EAAMqC,YAAYC,UAAUC,eAAiB,CAC7CH,UAAU,QAJR,GAQNZ,yBAA0B,CACxB9B,QAAQ,OACRE,WAAW,SAEb6B,4BAA6B,CAC3B/B,QAAQ,OACRE,WAAW,UAEb+B,4BAA6B,CAC3BjC,QAAQ,OACRE,WAAW,OAGbkC,SAAU,CACRZ,MAAM,cACNe,SAAU,EACVG,UAAU,QAGZL,WAAS,GACPE,SAAU,GADH,EAGLjC,EAAMqC,YAAYC,UAAUC,eAAiB,CAC7CN,SAAU,GAJL,GA5BuB,ICjDnB,SAASO,EAAT,GAAwD,IAArCxE,EAAoC,EAApCA,SAAUK,EAA0B,EAA1BA,UAClCI,EAAY2C,IAApB,GAEA,OACElD,EAAAA,EAAAA,KAAAA,MAAAA,CAAKG,WAAWgB,EAAAA,EAAAA,GAAIZ,EAAQgE,QAASpE,GAArC,SACGL,GAKP,CAAO,IAAMoD,GAAY3B,EAAAA,EAAAA,IAAkB,gBAAGiD,EAAH,EAAGA,OAAH,MAAiB,CAC1DD,QAAQ,OAAD,UACFC,EAAOD,SAF2B,I,UCN1B,SAASE,EAAT,GAAsE,IAAD,IAA9CC,SAAWC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,MAC9CC,GAAYC,EAAAA,EAAAA,MAAZD,QACAtE,EAAY2C,IAApB,GAEA,OACElD,EAAAA,EAAAA,KAACsE,EAAD,CAASnE,UAAWI,EAAQwE,MAA5B,UACEC,EAAAA,EAAAA,MAAClC,EAAD,YACE9C,EAAAA,EAAAA,KAACiF,EAAAA,GAAD,CAAMC,GAAG,KAAK9E,QAAQ,SAAS+E,KAAMR,KAErC3E,EAAAA,EAAAA,KAACE,EAAD,CAAKG,QAAM,EAACD,QAAQ,SAApB,SAEIgF,MAAMC,KAAM,CAAEC,OAAOV,IAAS,SAACW,EAAGC,GAAJ,OAC5BR,EAAAA,EAAAA,MAAAA,QAAAA,CAAAA,SAAAA,EACEhF,EAAAA,EAAAA,KAAAA,QAAAA,CAAOyF,KAAK,QAAQC,QAAM,KAC1B1F,EAAAA,EAAAA,KAAC2F,EAAAA,EAAD,CAAQC,QAAQ,WAAWC,QAAS,kBAAMhB,EAASW,EAAnD,EAAwDL,KAAMK,MAFpDA,EADd,UAcZ,KAAMtC,GAAY3B,EAAAA,EAAAA,GAAkB,CAClCwD,MAAO,CACLvD,QAAQ,OACRE,WAAW,SACXE,eAAe,SACfoB,MAAM,QACN8C,OAAO,QACPC,OAAQ,IACRC,eAAe,eAGjBC,YAAa,CACXrE,eAAe,SACfoB,MAAM,UCrCK,SAASkD,EAAT,GAAmF,IAA/DxB,EAA8D,EAA9DA,SAAUyB,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,aACzD9F,EAAY2C,IAApB,GACQoD,GAAgBC,EAAAA,EAAAA,MAAhBD,YAERE,QAAQC,IAAI,CAAEL,cAAAA,IACd,IAAMlF,GAAgBC,EAAAA,EAAAA,GAAIZ,EAAQmG,SAAUN,GAAiB7F,EAAQ6F,eAIrE,OACEpB,EAAAA,EAAAA,MAACW,EAAAA,EAAD,CAAQC,QAAQ,WAAWzF,UAAWe,EAAe2E,QAAS,kBAJlCS,GAAatG,EAAAA,EAAAA,KAACyE,EAAD,CAAaC,SAAUA,KAC/DiC,MAAM,SAAAR,GAAK,OAAIE,EAAc3B,EAASkC,KAAMT,EADjB,GAI5B,aACEnG,EAAAA,EAAAA,KAAAA,OAAAA,CAAMG,UAAWI,EAAQ4F,MAAzB,SAAiCA,KACjCnG,EAAAA,EAAAA,KAAAA,OAAAA,CAAMG,UAAWI,EAAQoE,MAAzB,SAAiCD,EAASC,UAKhD,KAAMzB,GAAY3B,EAAAA,EAAAA,IAAkB,gBAAGO,EAAH,EAAGA,MAAH,MAAgB,CAClD4E,SAAU,CACRlF,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXmF,YAAa,EACbC,QAAS,EACT9D,MAAO,IAGToD,cAAe,CACb,UAAWtE,EAAMiF,OAAOC,KAAKC,IAC7BC,MAAM,iBACNC,YAAY,iBAEZ,UAAW,CACT,UAAWrF,EAAMiF,OAAOK,QAAQpF,OAIpCmE,MAAO,CACLe,MAAM,iBAAkBpF,EAAMiF,OAAOK,QAAQpF,KAAxC,MAGP2C,MAAO,CACL0C,SAAS,SAzBqB,ICpBnB,SAASC,EAAT,GAAmE,IAAnDnH,EAAkD,EAAlDA,UAAWL,EAAuC,EAAvCA,SAAUqF,EAA6B,EAA7BA,KAAMoC,EAAuB,EAAvBA,UACxDzH,IAAAA,EAAaqF,GAEb,IAAQ5E,EAAY2C,IAApB,GAEMhC,GAAgBC,EAAAA,EAAAA,GACpBoG,GAAahH,EAAQiH,cACrBrH,GAGF,OACEH,EAAAA,EAAAA,KAAAA,OAAAA,CAAMG,UAAWe,EAAjB,SAAiCpB,GAIrC,KAAMoD,GAAY3B,EAAAA,EAAAA,IAAkB,kBAAgB,CAClDiG,cAAe,CACbN,MAFgC,EAAGpF,MAEtBiF,OAAOK,QAAQpF,MAFE,ICarByF,EAAa,CACxB,CAAEb,KAAK,UAAWhC,MAAM,EAAGD,MAAM,SACjC,CAAEiC,KAAK,cAAehC,MAAM,EAAGD,MAAM,YACrC,CAAEiC,KAAK,cAAehC,MAAM,EAAGD,MAAM,cACrC,CAAEiC,KAAK,cAAehC,MAAM,EAAGD,MAAM,gBAuCrBpD,EAAAA,EAAAA,IAAkB,kBAAgB,CAClDmG,KAAM,CACJR,MAFgC,EAAGpF,MAEtBiF,OAAOK,QAAQpF,MAFE,IAAlC,I,0CCzEe,SAAS2F,EAAT,GAAwF,IAA5D7H,EAA2D,EAA3DA,SAAUqF,EAAiD,EAAjDA,KAAMU,EAA2C,EAA3CA,QAAY+B,GAA+B,YACpG9H,IAAAA,EAAaqF,GAEb,IAAM0C,GAAM/C,EAAAA,EAAAA,MAEZ,IAAK+C,EAAK,MAAM,IAAIC,MAAJ,6CAMhB,OACE9H,EAAAA,EAAAA,KAAC2F,EAAAA,EAAD,iBAAYiC,EAAZ,CAAmB/B,QALC,WACpBgC,EAAIhD,QAASgB,aAAb,EAAaA,IADf,EAKE,SACG/F,IAGN,CClBc,SAASiI,IACtB,IAAQxH,EAAY2C,IAApB,GAEA,OACE8B,EAAAA,EAAAA,MAACV,EAAD,CAASnE,UAAWI,EAAQwE,MAA5B,WACEC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQyH,QAAvB,WACEhI,EAAAA,EAAAA,KAAAA,KAAAA,CAAIG,UAAWI,EAAQ0H,UAAvB,UAAkCjI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,sBAClCvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ2H,UAAvB,WACElI,EAAAA,EAAAA,KAAAA,IAAAA,CAAAA,SAAAA,wBAEAgF,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ4H,KAAvB,WACEnD,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,oEACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,2FACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,6IAIJvH,EAAAA,EAAAA,KAAAA,KAAAA,CAAIG,UAAWI,EAAQ0H,UAAvB,UAAkCjI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,yBAClCvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ2H,UAAvB,WACElI,EAAAA,EAAAA,KAAAA,IAAAA,CAAAA,SAAAA,iHAEAgF,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ4H,KAAvB,WACEnD,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,2GACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,0DACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,8GACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,2IACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,oHAIJvH,EAAAA,EAAAA,KAAAA,KAAAA,CAAIG,UAAWI,EAAQ0H,UAAvB,UAAkCjI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,2BAClCvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ2H,UAAvB,WACElI,EAAAA,EAAAA,KAAAA,IAAAA,CAAAA,SAAAA,gDAEAgF,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ4H,KAAvB,WACEnD,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,wDACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,+EACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,8GACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,iCACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,wEAIJvH,EAAAA,EAAAA,KAAAA,KAAAA,CAAIG,UAAWI,EAAQ0H,UAAvB,UAAkCjI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,2BAClCvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ2H,UAAvB,WACElI,EAAAA,EAAAA,KAAAA,IAAAA,CAAAA,SAAAA,0GAEAgF,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ4H,KAAvB,WACEnD,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,mGACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,6GACAvC,EAAAA,EAAAA,MAAAA,KAAAA,CAAI7E,UAAWI,EAAQ6H,SAAvB,WAAiCpI,EAAAA,EAAAA,KAACsH,EAAD,CAAMC,WAAS,EAAf,eAAjC,iHAKNvH,EAAAA,EAAAA,KAAC2H,EAAD,CAAkBxH,UAAWI,EAAQ0F,YAAaL,QAAQ,WAAWT,KAAK,cAKhF,KAAMjC,GAAY3B,EAAAA,EAAAA,IAAkB,gBAAGO,EAAH,EAAGA,MAAH,MAAgB,CAClDiD,MAAO,CACL/B,MAAM,QACN8C,OAAO,QACPuC,SAAS,OACTtC,OAAQ,IACRC,eAAe,gBAGjBgC,QAAS,CACPlB,QAAS,GAEXmB,UAAW,CACTrF,UAAgC,EAArBd,EAAMC,QAAQC,MAE3BkG,UAAW,CACTI,WAAYxG,EAAMC,QAAQC,MAG5BmG,KAAM,CACJI,YAAazG,EAAMC,QAAQC,KAC3BwG,UAAU,OACVC,YAAa3G,EAAMC,QAAQC,MAE7BoG,SAAU,CACRzG,OAAWG,EAAMC,QAAQC,KAAnB,QAGRiE,YAAa,CACXrE,eAAe,SACfoB,MAAM,QA9BwB,IClDnB,SAAS0F,EAAT,GAAyE,IAA5CC,EAA2C,EAAhDC,KAAkBC,EAA8B,EAA9BA,SAC/CtI,EAAY2C,IAApB,GACA,GAA0B4F,EAAAA,EAAAA,UAA6BH,GAA/CC,EAAR,KAAcG,EAAd,KACQzC,GAAgBC,EAAAA,EAAAA,MAAhBD,YACF0C,GAAiBC,EAAAA,EAAAA,SAAQ,GAEvBC,EAA0BN,EAA1BM,SAAUC,EAAgBP,EAAhBO,KAAMC,EAAUR,EAAVQ,MAClBC,EAA4BC,OAAOC,OAAQH,GAAQI,SAAU,MAE7DC,EAAa,SAACC,EAAqBvD,GACvC4C,GAAS,SAAAY,GAAC,8BACLA,EADK,CAERP,MAAM,OAAD,UACAO,EAAEP,OADF,OAEDM,GAAgBvD,EAFf,KAFA,GADT,EAmBA,OATAyD,EAAAA,EAAAA,YAAW,WACLZ,EAAea,QACjBb,EAAea,SAAU,EAI3BhB,SAAAA,EAAYD,EANL,GAON,CAAEA,KAGH5D,EAAAA,EAAAA,MAAAA,MAAAA,CAAK7E,UAAWI,EAAQa,IAAxB,WACEpB,EAAAA,EAAAA,KAACkC,EAAD,CAAe/B,UAAWI,EAAQuJ,OAAQ1H,OAAQ+G,EAAKY,GAAI1H,SAAU8G,EAAKW,OAAQ3H,SAAUgH,EAAKhH,YAEjG6C,EAAAA,EAAAA,MAAAA,MAAAA,CAAK7E,UAAWI,EAAQyJ,SAAxB,WACEhF,EAAAA,EAAAA,MAAAA,MAAAA,CAAAA,SAAAA,CAAAA,qBAAwBmE,EAAKhH,aAE7BnC,EAAAA,EAAAA,KAACE,EAAD,CAAKG,QAAM,EAACD,QAAQ,SAASD,UAAWI,EAAQ6I,MAAhD,SACG3B,EAAWwC,KAAK,SAAAC,GAAC,aAAIlK,EAAAA,EAAAA,KAACkG,EAAD,CAAuBE,cAAeiD,EAA2B3E,SAAUwF,EAAG/D,MAAK,UAAEiD,aAAF,EAAEA,EAASc,EAAEtD,aAAb,YAA4BP,aAAcoD,GAA9GS,EAAEtD,KAAtC,UAIL5G,EAAAA,EAAAA,KAAC2F,EAAAA,EAAD,CAAQxF,UAAWI,EAAQ4J,YAAavE,QAAQ,WAAWC,QAAS,kBAhC1CS,GAAatG,EAAAA,EAAAA,KAAC+H,EAAD,IAgCvC,EAA6F5C,KAAK,oBAElGnF,EAAAA,EAAAA,KAAC2F,EAAAA,EAAD,CAAQxF,UAAWI,EAAQ6J,SAAUxE,QAAQ,WAAWC,QAAS,kBC1D3BwE,GD0DwDC,EAAAA,EAAAA,KAAf,mBAAgDpB,GCzD7HqB,EAASC,SAASC,cAATD,MACRH,KAAOA,EACdE,EAAOH,SAAPG,QACAA,EAAOG,QAJM,IAA6BL,EACpCE,CDyDF,EAA6IpF,KAAK,cAOxJ,KAAMjC,GAAY3B,EAAAA,EAAAA,IAAkB,sBAAGO,EAAH,EAAGA,MAAH,MAAgB,CAClDV,KAAG,GACDI,QAAQ,OACRmJ,aAAa,iDACbjJ,WAAW,SACXG,IAAKC,EAAMC,QAAQC,MAJlB,EAMCF,EAAMqC,YAAYC,UAAUC,eAAiB,CAC7CsG,aAAa,+CAPd,GAWHC,mBAAoB,CAClB5H,MAAOlB,EAAM+I,MAAMC,YACnBlI,UAAWd,EAAMC,QAAQC,MAE3B8H,OAAQ,CACNiB,SAAS,SACT/H,MAAO,GACP8C,OAAQ,GACRkF,aAAa,OAEfhB,SAAU,CACRe,SAAS,OACTvJ,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXG,IAAKC,EAAMC,QAAQC,MAGrBoH,OAAK,OACDtH,EAAMqC,YAAY8G,OAAOC,YAAc,CACvCrJ,IAAKC,EAAMC,QAAQC,KAAO,GAFzB,GAMLmI,YAAa,CACXY,SAAS,QAGXX,UAAQ,GACNW,SAAS,QADH,EAGJjJ,EAAMqC,YAAYC,UAAUC,eAAiB,CAC7C7C,QAAQ,QAJJ,GAxCwB,I,mBE/DnB,SAAS2J,IAAmB,IAAD,EACxC,kBAAOC,EAAAA,EAAAA,YAAP,aAAOC,EAAaC,aAAaC,QAASC,EAAAA,GAC3C,CCDD,IAaA,EAboBC,EAAAA,EAAAA,uBAA4B,SAAAC,GAC9C,IAAMC,EAAeR,IASrB,OAPAO,EAAIE,KAAMC,EAAAA,EAAAA,KAAoBH,EAAIE,IAE9BD,IACFD,EAAII,UAAJJ,EAAII,QAAY,CAAC,GACjBJ,EAAII,QAAJJ,cAAAA,UAA2CC,GAGtCD,CAVW,ICWL,SAASK,IACtB,OAAkCC,EAAAA,EAAAA,KAA1B7D,EAAR,YAAgB8D,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,MACd3L,EAAY2C,IAApB,GAEMiJ,EAAU,mCAAG,gHAC0BC,QAAQC,IAAI,CACrDC,EAAAA,IAAAA,mBACAA,EAAAA,IAAAA,2BAHe,mBACTC,EADS,KACIC,EADJ,KAAAC,EAMc,CAAEF,EAAa,GAAKC,EAAa,IAA9CE,EAND,KAQZC,OAFGA,EANS,OAQZA,EAAUC,OAAUF,SAAAA,EAAUtD,MARlB,iDAUXyD,EAAiBF,EAASC,MAAM3C,KAAK,SAAAN,GAAC,8BACvCA,EADuC,CAE1CP,MAAK,UAAEsD,EAAStD,MAAM0D,MAAM,SAAAC,GAAC,OAAIA,EAAEC,SAAWrD,EAAEI,EAAzC,WAAF,QAAmD,CACtDkD,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,QAAS,OANU,IAUvBlB,IACAD,EAAI,WAAJA,GAAAA,EAAAA,EAAAA,GAASY,IArBQ,uCAAH,0DAuBVhE,EAAQ,mCAAG,WAAMD,GAAN,iFACT0D,EAAAA,IAAAA,wBAA0C,CAAEU,OAAOpE,EAAKmB,GAAIX,MAAMR,EAAKQ,QAD9D,OAEf+C,IAFe,sCAAH,2DAOd,OAFAvC,EAAAA,EAAAA,YAAW,WAAQuC,GAAV,GAA0B,KAGjCnM,EAAAA,EAAAA,KAACsE,EAAD,CAASnE,UAAWI,EAAQqK,mBAA5B,SACGzC,EAAK8B,KAAK,SAAAN,GAAC,OAAI3J,EAAAA,EAAAA,KAAC0I,EAAD,CAA+BE,KAAMe,EAAGd,SAAUA,GAA/Bc,EAAET,SAApC,KAKP,KAAMhG,GAAY3B,EAAAA,EAAAA,IAAkB,gBAAGO,EAAH,EAAGA,MAAH,MAAgB,CAClD8I,mBAAoB,CAClB5H,MAAOlB,EAAM+I,MAAMC,YACnBlI,UAAWd,EAAMC,QAAQC,MAE3B8H,OAAQ,CACN9G,MAAO,GACP8C,OAAQ,GACRkF,aAAa,OARiB,I,0CCzCnB,SAASqC,KACtB,MAA+BnK,KAAvB3C,EAAR,KAAmBuB,EAAnB,KAAmBA,MACXqH,GAASmE,EAAAA,EAAAA,MAATnE,KAEFoE,EAAM,mCAAG,2FACPC,EADO,WACGpC,EAAAA,EAAAA,YADH,aACGC,EAAaC,aACvBK,EAAeR,IAEhBqC,GAAY7B,EAJJ,iDAAA8B,OAMbD,EAAQE,WAAYC,EAAAA,IACpBH,EAAQE,WAAYlC,EAAAA,IAPPiC,EAAAA,KAAAA,EASPG,OAAU/B,EAAAA,EAAAA,KAAL,qBAA4C,CACrDgC,OAAO,SACP/B,QAAS,CACPgC,cAAc,UAAWnC,KAZhB,QAgBboC,EAAAA,GAAAA,UAAS,QAhBI,sCAAH,0DAmBNC,EAAU,mCAAG,0GACmB,IAAI5B,SAAS,SAAA6B,GAC/C,IAAMC,EAAQ1D,SAASC,cAATD,SAEd0D,EAAMzI,KAANyI,OACAA,EAAMC,OAAND,OACAA,EAAMxD,QACNwD,EAAME,iBAANF,UAAkC,kBAAMD,EAAGC,EAAMG,MAAjD,GANkC,IADnB,OAAAC,OACXD,EADW,OAUXE,EAAO,IAAIC,SACX7C,EAAeR,IAEjBkD,GAAOE,EAAKE,OAALF,UAAwBF,EAAO,IACtC1C,GAAc4C,EAAKE,OAALF,eAA6B5C,GAd9B2C,EAAAA,KAAAA,EAgBCV,OAAU/B,EAAAA,EAAAA,KAAL,kBAAyC,CAC9DgC,OAAO,OACP1I,KAAMoJ,IACJ5H,MAAM,SAAAsH,GAAC,OAAIA,EAAES,MAHC,IAhBD,cAqBTC,UAAkB,QAAT,KAAAvD,EAAA,qBAAawD,SAASC,UArBtB,uCAAH,0DAwBhB,OAAQ1F,GACNnE,EAAAA,EAAAA,MAACV,EAAD,CAASnE,UAAWI,EAAQuO,sBAA5B,WACE9O,EAAAA,EAAAA,KAACkC,EAAD,CAAe/B,UAAWI,EAAQuJ,OAAQ1H,OAAQ+G,EAAKY,GAAI1H,SAAU8G,EAAKW,OAAQ3H,SAAUgH,EAAKhH,YAEjG6C,EAAAA,EAAAA,MAAClC,EAAD,YACE9C,EAAAA,EAAAA,KAACiF,EAAAA,GAAD,UAAUkE,EAAKhH,SAAf,IAA2BgH,EAAK4F,iBAChC/O,EAAAA,EAAAA,KAACgP,GAAAA,EAAD,CAAUnJ,QAAS0H,EAAQrG,MAAOpF,EAAMiF,OAAOC,KAAKC,IAAKgI,KAAMC,EAAAA,IAAU/J,KAAK,oBAGhFH,EAAAA,EAAAA,MAAClC,EAAD,CAAQ3C,UAAWI,EAAQ4O,OAA3B,WACEnP,EAAAA,EAAAA,KAACiF,EAAAA,GAAD,qDACAjF,EAAAA,EAAAA,KAACgP,GAAAA,EAAD,CAAUnJ,QAASmI,EAAY9G,MAAOpF,EAAMiF,OAAOC,KAAKoI,MAAOH,KAAMI,EAAAA,IAAsBlK,KAAK,uBAXvF,IAiBjB,KAAMjC,IAAY3B,EAAAA,EAAAA,IAAkB,oBAAGO,EAAH,EAAGA,MAAH,MAAgB,CAClDgN,uBAAqB,GACnBtN,QAAQ,OACRK,IAAKC,EAAMC,QAAQC,KACnBN,WAAW,SACXsB,MAAOlB,EAAM+I,MAAMC,aAJA,EAMjBhJ,EAAMqC,YAAYC,UAAUC,eAAiB,CAC7C5C,cAAc,SACd6N,UAAU,UARO,GAWrBxF,OAAQ,CACNkB,aAAa,MACbuE,OAAO,aAAczN,EAAMiF,OAAOC,KAAKoI,MACvCtI,QAAS,GAEXqI,QAAM,OACFrN,EAAMqC,YAAYC,UAAUC,eAAiB,CAC7C7C,QAAQ,QAFN,GAjB0B,ICxEnB,SAASgO,KACtB,OACExP,EAAAA,EAAAA,KAACyP,EAAAA,EAAD,CAAYC,KAAK,SAAjB5P,UACEkF,EAAAA,EAAAA,MAAC2K,EAAAA,GAAD,CAAA7P,SAAAA,EACEE,EAAAA,EAAAA,KAACH,EAAD,CAA8BE,UAAUC,EAAAA,EAAAA,KAAC4P,EAAAA,EAAD,IAAxC9P,UACEE,EAAAA,EAAAA,KAACqN,GAAD,OAGFrN,EAAAA,EAAAA,KAAC+L,EAAD,QAIP,C","sources":["webpack://code-cactu-website/./src/features/discordIntegration/DiscordIntegrationProtection.tsx","webpack://code-cactu-website/./src/features/flow/Row.tsx","webpack://code-cactu-website/./src/features/discordIntegration/DiscordAvatar.tsx","webpack://code-cactu-website/./src/features/Text/TextContainer.tsx","webpack://code-cactu-website/./src/features/flow/Column.tsx","webpack://code-cactu-website/./src/features/contentContainers/Surface.tsx","webpack://code-cactu-website/./src/features/gameJam/VotingPopup.tsx","webpack://code-cactu-website/./src/features/gameJam/VoteTile.tsx","webpack://code-cactu-website/./src/features/Text/Span.tsx","webpack://code-cactu-website/./src/features/gameJam/GameJamVoting.tsx","webpack://code-cactu-website/./src/lib/Popup/components/PopupCloseButton.tsx","webpack://code-cactu-website/./src/features/gameJam/DescriptionPopup.tsx","webpack://code-cactu-website/./src/features/gameJam/GamesListRow.tsx","webpack://code-cactu-website/./src/lib/core/functions/download.ts","webpack://code-cactu-website/./src/features/discordIntegration/getSessionToken.ts","webpack://code-cactu-website/./src/features/backendHttp/index.ts","webpack://code-cactu-website/./src/sections/JamProductionsList.tsx","webpack://code-cactu-website/./src/sections/IntegratedUserHeader.tsx","webpack://code-cactu-website/./src/pages/jam.tsx"],"sourcesContent":["import { ReactNode } from \"react\"\r\nimport isIntegrated from \"./isIntegrated\"\r\n\r\nexport type DiscordIntegrationProtectionProps = {\r\n  children: ReactNode\r\n  fallback?: ReactNode\r\n}\r\n\r\nexport default function DiscordIntegrationProtection({ children, fallback }:DiscordIntegrationProtectionProps) {\r\n  return <>{isIntegrated() ? children : fallback}</>\r\n}\r\n","import { ReactNode } from \"react\"\r\nimport cn from \"@lib/theming/createClassName\"\r\nimport select from \"@lib/core/functions/select\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\n\r\nexport type Justification = `left` | `center` | `right` | `space-between`\r\nexport type RowProps = {\r\n  className?: string\r\n  children: ReactNode\r\n  justify?: Justification\r\n  spaced?: boolean\r\n  wrapping?: boolean\r\n}\r\n\r\nexport default function Row({ className, children, justify, spaced, wrapping }:RowProps) {\r\n  const [ classes ] = useRowStyles()\r\n  const justifyClassName = select( justify, {\r\n    left: classes.isJustifiedLeft,\r\n    center: classes.isJustifiedCenter,\r\n    right: classes.isJustifiedRight,\r\n    \"space-between\": classes.isJustifiedSpaceBetween,\r\n  } )\r\n\r\n  const fullClassName = cn(\r\n    classes.row,\r\n    spaced && classes.isSpaced,\r\n    wrapping && classes.isWrapping,\r\n    justifyClassName,\r\n    className,\r\n  )\r\n\r\n  return (\r\n    <div className={fullClassName}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const useRowStyles = createStylesHook( ({ atoms }) => ({\r\n  row: {\r\n    display: `flex`,\r\n    flexDirection: `row`,\r\n    alignItems: `center`,\r\n\r\n    \"& > *\": {\r\n      margin: 0,\r\n    },\r\n  },\r\n\r\n  isJustifiedLeft: {\r\n    justifyContent: `left`,\r\n  },\r\n  isJustifiedCenter: {\r\n    justifyContent: `center`,\r\n  },\r\n  isJustifiedRight: {\r\n    justifyContent: `right`,\r\n  },\r\n  isJustifiedSpaceBetween: {\r\n    justifyContent: `space-between`,\r\n  },\r\n\r\n  isSpaced: {\r\n    gap: atoms.spacing.main,\r\n  },\r\n\r\n  isWrapping: {\r\n    flexWrap: `wrap`,\r\n  },\r\n}) )\r\n","export type DiscordAvatarProps = {\r\n  className?: string\r\n  username: string\r\n  userId: string\r\n  avatarId: string\r\n}\r\n\r\nexport default function DiscordAvatar({ className, username, userId, avatarId }:DiscordAvatarProps) {\r\n  return <img className={className} src={`https://cdn.discordapp.com/avatars/${userId}/${avatarId}.webp?size=100`} alt={`${username}'s avatar`} />\r\n}\r\n","import { ReactNode } from \"react\"\r\nimport { CSSProperties } from \"@lib/theming/types\"\r\nimport cn from \"@lib/theming/createClassName\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\n\r\nexport type TextContainerProps = {\r\n  className?: string\r\n  style?: CSSProperties\r\n  children: ReactNode\r\n}\r\n\r\nexport default function TextContainer({ className, style, children }:TextContainerProps) {\r\n  const [ classes ] = useTextContainerStyles()\r\n\r\n  return <div className={cn( classes.textContainer, className )} style={style}>{children}</div>\r\n}\r\n\r\nexport const useTextContainerStyles = createStylesHook( ({ atoms }) => ({\r\n  textContainer: {\r\n    \"& > :first-child\": {\r\n      marginTop: 0,\r\n    },\r\n    \"& > :last-child\": {\r\n      marginBottom: 0,\r\n    },\r\n    \"& > *\": {\r\n      marginBottom: atoms.spacing.main,\r\n    },\r\n  },\r\n}) )\r\n","import { ReactNode, CSSProperties } from \"react\"\r\nimport cn from \"@lib/theming/createClassName\"\r\nimport select from \"@lib/core/functions/select\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\nimport TextContainer from \"@fet/Text/TextContainer\"\r\nimport { Justification } from \"./Row\"\r\n\r\nexport type VerticallJustification = `top` | `center` | `bottom`\r\nexport type ColumnProps = {\r\n  className?: string\r\n  style?: CSSProperties\r\n  children: ReactNode\r\n  verticallJustify?: VerticallJustification\r\n  justify?: Justification\r\n  narrow?: boolean\r\n  width?: string\r\n}\r\n\r\nexport default function Column({ className, style, children, verticallJustify, width, narrow }:ColumnProps) {\r\n  const [ classes ] = useStyles()\r\n\r\n  const normalTextContainer = !verticallJustify || verticallJustify == `top`\r\n  const verticallJustifyClassName = select( verticallJustify, {\r\n    top: classes.isVerticallyJustifiedTop,\r\n    center: classes.isVerticallyJustifiedCenter,\r\n    bottom: classes.isVerticallyJustifiedBottom,\r\n  } )\r\n\r\n  const fullClassname = cn(\r\n    classes.column,\r\n    narrow && classes.isNarrow,\r\n    width && classes.withWidth,\r\n    verticallJustifyClassName,\r\n    className,\r\n  )\r\n\r\n  if (width) {\r\n    style ||= {}\r\n\r\n    if (/^\\d+%$/.test( width )) style.flexGrow = Number( width.match( /\\d+/ )![ 0 ] ) / 100\r\n    else style.flexBasis = width\r\n  }\r\n\r\n  if (normalTextContainer) return (\r\n    <TextContainer className={fullClassname} style={style}>\r\n      {children}\r\n    </TextContainer>\r\n  )\r\n\r\n  return (\r\n    <div className={fullClassname} style={style}>\r\n      <TextContainer>\r\n        {children}\r\n      </TextContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = createStylesHook( ({ atoms }) => ({\r\n  column: {\r\n    display: `block`,\r\n\r\n    [ atoms.breakpoints.bigMobile.mediaQueryMax ]: {\r\n      flexBasis: `100%`,\r\n    },\r\n  },\r\n\r\n  isVerticallyJustifiedTop: {\r\n    display: `flex`,\r\n    alignItems: `start`,\r\n  },\r\n  isVerticallyJustifiedCenter: {\r\n    display: `flex`,\r\n    alignItems: `center`,\r\n  },\r\n  isVerticallyJustifiedBottom: {\r\n    display: `flex`,\r\n    alignItems: `end`,\r\n  },\r\n\r\n  isNarrow: {\r\n    width: `max-content`,\r\n    flexGrow: 0,\r\n    flexBasis: `auto`,\r\n  },\r\n\r\n  withWidth: {\r\n    flexGrow: 0,\r\n\r\n    [ atoms.breakpoints.bigMobile.mediaQueryMax ]: {\r\n      flexGrow: 1,\r\n    },\r\n  },\r\n}) )\r\n","import { ReactNode } from \"react\"\r\nimport cn from \"@lib/theming/createClassName\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\n\r\nexport type SurfaceProps = {\r\n  children: ReactNode\r\n  className?: string\r\n}\r\n\r\nexport default function Surface({ children, className }:SurfaceProps) {\r\n  const [ classes ] = useStyles()\r\n\r\n  return (\r\n    <div className={cn( classes.surface, className )}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const useStyles = createStylesHook( ({ mixins }) => ({\r\n  surface: {\r\n    ...mixins.surface,\r\n  },\r\n}) )\r\n","import { usePopupContext } from \"@lib/Popup/PopupContext\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\nimport Row from \"@fet/flow/Row\"\r\nimport Column from \"@fet/flow/Column\"\r\nimport Button from \"@fet/controls/Button\"\r\nimport Surface from \"@fet/contentContainers/Surface\"\r\nimport Text from \"@fet/Text\"\r\nimport { Category } from \"./GameJamVoting\"\r\n\r\nexport type VotingPopupProps = {\r\n  category: Category\r\n}\r\n\r\nexport default function VotingPopup({ category:{ title, scale } }:VotingPopupProps) {\r\n  const { resolve } = usePopupContext()\r\n  const [ classes ] = useStyles()\r\n\r\n  return (\r\n    <Surface className={classes.popup}>\r\n      <Column>\r\n        <Text as=\"h3\" justify=\"center\" body={title} />\r\n\r\n        <Row spaced justify=\"center\">\r\n          {\r\n            Array.from( { length:scale }, (_, i) => (\r\n              <label key={i}>\r\n                <input type=\"radio\" hidden />\r\n                <Button variant=\"outlined\" onClick={() => resolve( i )} body={i} />\r\n              </label>\r\n            ) )\r\n          }\r\n\r\n        </Row>\r\n      </Column>\r\n    </Surface>\r\n  )\r\n}\r\n\r\nconst useStyles = createStylesHook(({\r\n  popup: {\r\n    display: `flex`,\r\n    alignItems: `center`,\r\n    justifyContent: `center`,\r\n    width: `100vw`,\r\n    height: `100vh`,\r\n    zIndex: 1000,\r\n    backdropFilter: `blur( 3px )`,\r\n  },\r\n\r\n  closeButton: {\r\n    justifyContent: `center`,\r\n    width: `100%`,\r\n  },\r\n}) )\r\n","import cn from \"@lib/theming/createClassName\"\r\nimport { usePopupsContext } from \"@lib/Popup/PopupsContext\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\nimport Button from \"@fet/controls/Button\"\r\nimport VotingPopup from \"./VotingPopup\"\r\nimport { Category } from \"./GameJamVoting\"\r\n\r\nexport type VoteTileProps = {\r\n  category: Category\r\n  score: number\r\n  notConsidered?: boolean\r\n  onUpdateVote: (categoryName:string, score:number) => void\r\n}\r\n\r\nexport default function VoteTile({ category, score, notConsidered, onUpdateVote }:VoteTileProps) {\r\n  const [ classes ] = useStyles()\r\n  const { createPopup } = usePopupsContext()\r\n\r\n  console.log({ notConsidered })\r\n  const fullClassName = cn( classes.voteTile, notConsidered && classes.notConsidered )\r\n  const showVoteOptions = () => createPopup( <VotingPopup category={category} /> )\r\n    .then( score => onUpdateVote( category.name, score ) )\r\n\r\n  return (\r\n    <Button variant=\"outlined\" className={fullClassName} onClick={() => showVoteOptions()}>\r\n      <span className={classes.score}>{score}</span>\r\n      <span className={classes.title}>{category.title}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst useStyles = createStylesHook( ({ atoms }) => ({\r\n  voteTile: {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    alignItems: `center`,\r\n    borderWidth: 1,\r\n    padding: 0,\r\n    width: 45,\r\n  },\r\n\r\n  notConsidered: {\r\n    \"--color\": atoms.colors.rest.red,\r\n    color: `var( --color )`,\r\n    borderColor: `var( --color )`,\r\n\r\n    \"&:hover\": {\r\n      \"--color\": atoms.colors.primary.main,\r\n    },\r\n  },\r\n\r\n  score: {\r\n    color: `var( --color, ${atoms.colors.primary.main} )`,\r\n  },\r\n\r\n  title: {\r\n    fontSize: `0.5em`,\r\n  },\r\n}) )\r\n","import { ReactNode } from \"react\"\r\nimport cn from \"@lib/theming/createClassName\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\n\r\nexport type SpanProps = {\r\n  className?: string\r\n  children?: ReactNode\r\n  body?: ReactNode\r\n  highlight?: boolean\r\n}\r\n\r\nexport default function Span({ className, children, body, highlight }:SpanProps) {\r\n  children ||= body\r\n\r\n  const [ classes ] = useStyles()\r\n\r\n  const fullClassName = cn(\r\n    highlight && classes.isHighlighted,\r\n    className,\r\n  )\r\n\r\n  return (\r\n    <span className={fullClassName}>{children}</span>\r\n  )\r\n}\r\n\r\nconst useStyles = createStylesHook( ({ atoms }) => ({\r\n  isHighlighted: {\r\n    color: atoms.colors.primary.main,\r\n  },\r\n}) )\r\n","import { TbHelp } from \"react-icons/tb\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { usePopupsContext } from \"@lib/Popup/PopupsContext\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\nimport Row from \"@fet/flow/Row\"\r\nimport Column from \"@fet/flow/Column\"\r\nimport { User } from \"@fet/discordIntegration/DiscordLinking\"\r\nimport Button from \"@fet/controls/Button\"\r\nimport Span from \"@fet/Text/Span\"\r\nimport VotingPopup from \"./VotingPopup\"\r\n\r\nexport type GameItem = {\r\n  id: number\r\n  filename: string\r\n  user: User\r\n}\r\n\r\nexport type Votes = {\r\n  subject: null | number\r\n  impressions: null | number\r\n  realisation: null | number\r\n  readability: null | number\r\n}\r\n\r\nexport type GameVote = Votes & {\r\n  id: number\r\n  userId: string\r\n  gameId: number\r\n}\r\n\r\nexport type GameItemWithVotes = GameItem & {\r\n  votes: Votes\r\n}\r\n\r\nexport type GameJamVotingProps = {\r\n  game: GameItemWithVotes\r\n  onUpdate?: (votes:Votes) => void\r\n}\r\n\r\nexport const categories = [\r\n  { name:`subject`, scale:3, title:`Temat` },\r\n  { name:`impressions`, scale:3, title:`Wrażenia` },\r\n  { name:`realisation`, scale:4, title:`Realizacja` },\r\n  { name:`readability`, scale:3, title:`Czytelność` },\r\n]\r\n\r\nexport type Category = (typeof categories)[number]\r\n\r\nexport default function GameJamVoting({ game, onUpdate }:GameJamVotingProps) {\r\n  const [ classes ] = useStyles()\r\n  const { createPopup } = usePopupsContext()\r\n  const [ votes, setVotes ] = useState<Votes>(\r\n    categories.reduce( (obj, c) => ({ ...obj, [ c.name ]:game.votes?.[ c.name ] ?? null }), {} as Votes ),\r\n  )\r\n\r\n  const showVotes = (category:Category) => createPopup( <VotingPopup category={category} /> )\r\n    .then( vote => setVotes( v => ({ ...v, [ category.name ]:vote }) ) )\r\n\r\n  useEffect( () => {\r\n    onUpdate?.( votes )\r\n  }, [ votes ] )\r\n\r\n  return (\r\n    <Column>\r\n      {\r\n        categories.map( category => {\r\n          const gameVote = votes[ category.name ] ?? `-`\r\n\r\n          return (\r\n            <Row key={category.name} spaced>\r\n              <Span>{category.title}</Span>\r\n              <Button variant=\"clean\" className={classes.help} body={<TbHelp />} />\r\n              <Button variant=\"outlined\" onClick={() => showVotes( category )} body={gameVote} />\r\n            </Row>\r\n          )\r\n        } )\r\n\r\n      }\r\n    </Column>\r\n  )\r\n}\r\n\r\nconst useStyles = createStylesHook( ({ atoms }) => ({\r\n  help: {\r\n    color: atoms.colors.primary.main,\r\n  },\r\n}) )\r\n","import { Promiseable } from \"@lib/types/enhancedTypes\"\r\nimport ElementChildren from \"@lib/types/ElementChildren\"\r\nimport Button, { ButtonProps } from \"@fet/controls/Button\"\r\nimport { usePopupContext } from \"../PopupContext\"\r\n\r\nexport type PopupCloseButtonProps = ElementChildren & ButtonProps & {\r\n  onClick?: () => Promiseable<unknown>\r\n}\r\n\r\nexport default function PopupCloseButton({ children, body, onClick, ...props }:PopupCloseButtonProps) {\r\n  children ||= body\r\n\r\n  const ctx = usePopupContext()\r\n\r\n  if (!ctx) throw new Error( `Popup button cannot be used outside popup` )\r\n\r\n  const handleOnClick = () => {\r\n    ctx.resolve( onClick?.() )\r\n  }\r\n\r\n  return (\r\n    <Button {...props} onClick={handleOnClick}>\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n","import PopupCloseButton from \"@lib/Popup/components/PopupCloseButton\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\nimport Surface from \"@fet/contentContainers/Surface\"\r\nimport Span from \"@fet/Text/Span\"\r\n\r\nexport type VotingPopupProps = {}\r\n\r\nexport default function DescriptionPopup() {\r\n  const [ classes ] = useStyles()\r\n\r\n  return (\r\n    <Surface className={classes.popup}>\r\n      <dl className={classes.defList}>\r\n        <dt className={classes.listTitle}><Span highlight>Temat</Span></dt>\r\n        <dd className={classes.listValue}>\r\n          <p>Zgodność z tematem</p>\r\n\r\n          <ol className={classes.list}>\r\n            <li className={classes.listItem}><Span highlight>0</Span> - Temat nie jest dostrzegalny, lub jest niezwykle szczątkowy</li>\r\n            <li className={classes.listItem}><Span highlight>1</Span> - Temat występuje przykładowo w tle, okala produkcję, gra jakoś nawiązuje do tematu</li>\r\n            <li className={classes.listItem}><Span highlight>2</Span> - Temat został zaimplementowany w mechanikach dzieła, mechaniki są spójne z tematem a ich podmiana zupełnie by zmieniła produkt</li>\r\n          </ol>\r\n        </dd>\r\n\r\n        <dt className={classes.listTitle}><Span highlight>Wrażenia</Span></dt>\r\n        <dd className={classes.listValue}>\r\n          <p>Ogólne wrażenia. Wywołana ciekawość, chęć zobaczenia kontynuacji, element zaskoczenia, chęć powtarzania gry</p>\r\n\r\n          <ol className={classes.list}>\r\n            <li className={classes.listItem}><Span highlight>0</Span> - Monotonia, nuda, brak zaciekawienia odbiorcy, niechęć do przejścia całości lub przejscie z trudem</li>\r\n            <li className={classes.listItem}><Span highlight>1</Span> - Powiewa deliaktną nudą, fajne ale nie rób więcej</li>\r\n            <li className={classes.listItem}><Span highlight>2</Span> - Nic dodać nic ująć -- wartość domyślna, zaznacz jeśli nic szczególnie nie wpłynęło na Twoje wrażenia</li>\r\n            <li className={classes.listItem}><Span highlight>3</Span> - Sympatyczna produkcja, wywołała przyjemne odczucia lub zachęciła do ponownej gry. Być może zagrałbyś w kontynuację lub wersję 2.0</li>\r\n            <li className={classes.listItem}><Span highlight>4</Span> - Chcesz więcej, nawet jeśli było coś nie tak to nie ma to zestawienia z plusami. Bardzo przyjemna gra</li>\r\n          </ol>\r\n        </dd>\r\n\r\n        <dt className={classes.listTitle}><Span highlight>Realizacja</Span></dt>\r\n        <dd className={classes.listValue}>\r\n          <p>Spójność produktu, dobrze dobrane wizualia</p>\r\n\r\n          <ol className={classes.list}>\r\n            <li className={classes.listItem}><Span highlight>0</Span> - Bez składu i ładu -- mało co do siebie pasuje.</li>\r\n            <li className={classes.listItem}><Span highlight>1</Span> - Niektóre elementy do siebie nie pasują, całość nie współgra najlepiej</li>\r\n            <li className={classes.listItem}><Span highlight>2</Span> - Nic dodać nic ująć -- wartość domyślna, zaznacz jeśli nic szczególnie nie wpłynęło na Twoje wrażenia</li>\r\n            <li className={classes.listItem}><Span highlight>3</Span> - Dobrze dobrane elementy</li>\r\n            <li className={classes.listItem}><Span highlight>4</Span> - Wszystko świetnie ze sobą współgra razem tworząc jedność</li>\r\n          </ol>\r\n        </dd>\r\n\r\n        <dt className={classes.listTitle}><Span highlight>Czytelność</Span></dt>\r\n        <dd className={classes.listValue}>\r\n          <p>Czytelność i jasność zasad. Czy wiadomo co robić (jeśli błądzisz, czy wiesz o tym że czegoś szukasz)</p>\r\n\r\n          <ol className={classes.list}>\r\n            <li className={classes.listItem}><Span highlight>0</Span> - Niczego nie zrozumiałeś. Produkt niczego nie tłumaczy i bez pomocy autora nic nie zrobisz</li>\r\n            <li className={classes.listItem}><Span highlight>1</Span> - Autor musi wyjaśnić drobne kwestie ale poza prostymi dopowiedzeniami produkt względnie się tłumaczy</li>\r\n            <li className={classes.listItem}><Span highlight>2</Span> - Nikt nic nie musi dopowiadać. Jeśli tak się dzieje, to tylko w sytuacji rzeczy celowo ukrytych</li>\r\n          </ol>\r\n        </dd>\r\n      </dl>\r\n\r\n      <PopupCloseButton className={classes.closeButton} variant=\"outlined\" body=\"Zamknij\" />\r\n    </Surface>\r\n  )\r\n}\r\n\r\nconst useStyles = createStylesHook( ({ atoms }) => ({\r\n  popup: {\r\n    width: `100vw`,\r\n    height: `100vh`,\r\n    overflow: `auto`,\r\n    zIndex: 1000,\r\n    backdropFilter: `blur( 10px )`,\r\n  },\r\n\r\n  defList: {\r\n    padding: 0,\r\n  },\r\n  listTitle: {\r\n    marginTop: atoms.spacing.main * 2,\r\n  },\r\n  listValue: {\r\n    marginLeft: atoms.spacing.main,\r\n  },\r\n\r\n  list: {\r\n    paddingLeft: atoms.spacing.main,\r\n    listStyle: `none`,\r\n    textIndent: -atoms.spacing.main,\r\n  },\r\n  listItem: {\r\n    margin: `${atoms.spacing.main}px 0`,\r\n  },\r\n\r\n  closeButton: {\r\n    justifyContent: `center`,\r\n    width: `100%`,\r\n  },\r\n}) )\r\n","import { useEffect, useState, useRef } from \"react\"\r\nimport download from \"@lib/core/functions/download\"\r\nimport { usePopupsContext } from \"@lib/Popup/PopupsContext\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\nimport Row from \"@fet/flow/Row\"\r\nimport DiscordAvatar from \"@fet/discordIntegration/DiscordAvatar\"\r\nimport Button from \"@fet/controls/Button\"\r\nimport { getServerUrl } from \"../../config\"\r\nimport VoteTile from \"./VoteTile\"\r\nimport { categories, GameItemWithVotes } from \"./GameJamVoting\"\r\nimport DescriptionPopup from \"./DescriptionPopup\"\r\n\r\nexport type GamesListRowProps = {\r\n  game: GameItemWithVotes\r\n  onUpdate?: (game) => void\r\n}\r\n\r\nexport default function GamesListRow({ game:orginalGame, onUpdate }:GamesListRowProps) {\r\n  const [ classes ] = useStyles()\r\n  const [ game, setGame ] = useState<GameItemWithVotes>( orginalGame )\r\n  const { createPopup } = usePopupsContext()\r\n  const firstRenderRef = useRef( true )\r\n\r\n  const { filename, user, votes } = game\r\n  const votesIsNotConsideredColor = Object.values( votes ).includes( null )\r\n  const showDescription = () => createPopup( <DescriptionPopup /> )\r\n  const updateVote = (categoryName:string, score:number) => {\r\n    setGame( g => ({\r\n      ...g,\r\n      votes: {\r\n        ...g.votes,\r\n        [ categoryName ]: score,\r\n      },\r\n    }) )\r\n  }\r\n\r\n  useEffect( () => {\r\n    if (firstRenderRef.current) {\r\n      firstRenderRef.current = false\r\n      return\r\n    }\r\n\r\n    onUpdate?.( game )\r\n  }, [ game ] )\r\n\r\n  return (\r\n    <div className={classes.row}>\r\n      <DiscordAvatar className={classes.avatar} userId={user.id} avatarId={user.avatar} username={user.username} />\r\n\r\n      <div className={classes.userData}>\r\n        <div>Praca użytkownika {user.username}</div>\r\n\r\n        <Row spaced justify=\"center\" className={classes.votes}>\r\n          {categories.map( c => <VoteTile key={c.name} notConsidered={votesIsNotConsideredColor} category={c} score={votes?.[ c.name ] ?? `-`} onUpdateVote={updateVote} /> )}\r\n        </Row>\r\n      </div>\r\n\r\n      <Button className={classes.description} variant=\"outlined\" onClick={() => showDescription()} body=\"Opis kategorii\" />\r\n\r\n      <Button className={classes.download} variant=\"outlined\" onClick={() => download( filename, `${getServerUrl()}/cactujam/games/${filename}` )} body=\"Pobierz\" />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst useStyles = createStylesHook( ({ atoms }) => ({\r\n  row: {\r\n    display: `grid`,\r\n    gridTemplate: `\"avatar data desc down\" / 50px 1fr max-content`,\r\n    alignItems: `center`,\r\n    gap: atoms.spacing.main,\r\n\r\n    [ atoms.breakpoints.bigMobile.mediaQueryMax ]: {\r\n      gridTemplate: `\"avatar desc\" \"data data\" / 1fr max-content`,\r\n    },\r\n  },\r\n\r\n  jamProductionsList: {\r\n    width: atoms.sizes.columnWidth,\r\n    marginTop: atoms.spacing.main,\r\n  },\r\n  avatar: {\r\n    gridArea: `avatar`,\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: `50%`,\r\n  },\r\n  userData: {\r\n    gridArea: `data`,\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    alignItems: `center`,\r\n    gap: atoms.spacing.main,\r\n  },\r\n\r\n  votes: {\r\n    [ atoms.breakpoints.mobile.mediaQuery ]: {\r\n      gap: atoms.spacing.main / 2,\r\n    },\r\n  },\r\n\r\n  description: {\r\n    gridArea: `desc`,\r\n  },\r\n\r\n  download: {\r\n    gridArea: `down`,\r\n\r\n    [ atoms.breakpoints.bigMobile.mediaQueryMax ]: {\r\n      display: `none`,\r\n    },\r\n  },\r\n}) )\r\n","\r\nexport default function download( filename, href ) {\r\n  const anchor = document.createElement( `a` )\r\n  anchor.href = href\r\n  anchor.download = ``\r\n  anchor.click()\r\n}\r\n","import getWindow from \"@lib/core/functions/getWindow\"\r\nimport { discordIntegrationStorageSessionKey } from \"./isIntegrated\"\r\n\r\nexport default function getSessionToken() {\r\n  return getWindow()?.localStorage.getItem( discordIntegrationStorageSessionKey )\r\n}\r\n","import http from \"@lib/http\"\r\nimport getSessionToken from \"@fet/discordIntegration/getSessionToken\"\r\nimport { getServerApiUrl } from \"../../config\"\r\n\r\nconst backendHttp = http.createMiddlewaredHttp( req => {\r\n  const sessionToken = getSessionToken()\r\n\r\n  req.uri = getServerApiUrl() + req.uri\r\n\r\n  if (sessionToken) {\r\n    req.headers ||= {}\r\n    req.headers[ `Authorization` ] = `Bearer ${sessionToken}`\r\n  }\r\n\r\n  return req\r\n} )\r\n\r\nexport default backendHttp\r\n","import { useEffect } from \"react\"\r\nimport useArrayState from \"@lib/core/hooks/useArrayState\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\nimport GamesListRow from \"@fet/gameJam/GamesListRow\"\r\nimport { GameItemWithVotes, GameVote } from \"@fet/gameJam/GameJamVoting\"\r\nimport { User } from \"@fet/discordIntegration/DiscordLinking\"\r\nimport Surface from \"@fet/contentContainers/Surface\"\r\nimport backendHttp from \"@fet/backendHttp\"\r\n\r\nexport type GameItem = {\r\n  id: number\r\n  filename: string\r\n  user: User\r\n}\r\n\r\nexport default function JamProductionList() {\r\n  const [ list, { push, clear } ] = useArrayState<GameItemWithVotes>()\r\n  const [ classes ] = useStyles()\r\n\r\n  const fetchGames = async() => {\r\n    const [ itemsReqRes, votesReqRes ] = await Promise.all([\r\n      backendHttp.get<{games: GameItem[]}>( `/cactujam/games` ),\r\n      backendHttp.get<{votes: GameVote[]}>( `/cactujam/games/votes` ),\r\n    ])\r\n\r\n    const [ itemsRes, votesRes ] = [ itemsReqRes[ 0 ], votesReqRes[ 0 ] ]\r\n\r\n    if (!itemsRes?.games || !votesRes?.votes) return\r\n\r\n    const gamesWithVotes = itemsRes.games.map( g => ({\r\n      ...g,\r\n      votes: votesRes.votes.find( v => v.gameId === g.id ) ?? {\r\n        impressions: null,\r\n        readability: null,\r\n        realisation: null,\r\n        subject: null,\r\n      },\r\n    }) )\r\n\r\n    clear()\r\n    push( ...gamesWithVotes )\r\n  }\r\n  const onUpdate = async(game:GameItemWithVotes) => {\r\n    await backendHttp.put( `/cactujam/games/votes`, { gameId:game.id, votes:game.votes } )\r\n    fetchGames()\r\n  }\r\n\r\n  useEffect( () => { fetchGames() }, [] )\r\n\r\n  return (\r\n    <Surface className={classes.jamProductionsList}>\r\n      {list.map( g => <GamesListRow key={g.filename} game={g} onUpdate={onUpdate} /> )}\r\n    </Surface>\r\n  )\r\n}\r\n\r\nconst useStyles = createStylesHook( ({ atoms }) => ({\r\n  jamProductionsList: {\r\n    width: atoms.sizes.columnWidth,\r\n    marginTop: atoms.spacing.main,\r\n  },\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: `50%`,\r\n  },\r\n}) )\r\n","import { MdLogout } from \"react-icons/md\"\r\nimport { AiOutlineCloudUpload } from \"react-icons/ai\"\r\nimport { navigate } from \"gatsby\"\r\nimport getWindow from \"@lib/core/functions/getWindow\"\r\nimport { createStylesHook } from \"@fet/theming\"\r\nimport Column from \"@fet/flow/Column\"\r\nimport { discordIntegrationStorageSessionKey, discordIntegrationStorageUserKey } from \"@fet/discordIntegration/isIntegrated\"\r\nimport getSessionToken from \"@fet/discordIntegration/getSessionToken\"\r\nimport { useIntegratedUserContext } from \"@fet/discordIntegration/IntegratedUserContext\"\r\nimport DiscordAvatar from \"@fet/discordIntegration/DiscordAvatar\"\r\nimport Surface from \"@fet/contentContainers/Surface\"\r\nimport Text from \"@fet/Text\"\r\nimport CardLink from \"@fet/CardLinks\"\r\nimport { getServerApiUrl } from \"../config\"\r\n\r\nexport default function IntegratedUserHeader() {\r\n  const [ classes, { atoms } ] = useStyles()\r\n  const { user } = useIntegratedUserContext()\r\n\r\n  const logout = async() => {\r\n    const storage = getWindow()?.localStorage\r\n    const sessionToken = getSessionToken()\r\n\r\n    if (!storage || !sessionToken) return\r\n\r\n    storage.removeItem( discordIntegrationStorageUserKey )\r\n    storage.removeItem( discordIntegrationStorageSessionKey )\r\n\r\n    await fetch( `${getServerApiUrl()}/discord/integrate`, {\r\n      method: `DELETE`,\r\n      headers: {\r\n        Authorization: `Bearer ${sessionToken}`,\r\n      },\r\n    } )\r\n\r\n    navigate( `/jam` )\r\n  }\r\n\r\n  const uploadFile = async() => {\r\n    const files:null | FileList = await new Promise( r => {\r\n      const input = document.createElement( `input` )\r\n\r\n      input.type = `file`\r\n      input.accept = `.zip`\r\n      input.click()\r\n      input.addEventListener( `change`, () => r( input.files ) )\r\n    } )\r\n\r\n    const form = new FormData()\r\n    const sessionToken = getSessionToken()\r\n\r\n    if (files) form.append( `gameZip`, files[ 0 ] )\r\n    if (sessionToken) form.append( `sessionToken`, sessionToken )\r\n\r\n    const res = await fetch( `${getServerApiUrl()}/cactujam/games`, {\r\n      method: `POST`,\r\n      body: form,\r\n    } ).then( r => r.json() )\r\n\r\n    if (res.success) getWindow()?.location.reload()\r\n  }\r\n\r\n  return !user ? null : (\r\n    <Surface className={classes.integrationUserHeader}>\r\n      <DiscordAvatar className={classes.avatar} userId={user.id} avatarId={user.avatar} username={user.username} />\r\n\r\n      <Column>\r\n        <Text>{`${user.username}#${user.discriminator}`}</Text>\r\n        <CardLink onClick={logout} color={atoms.colors.rest.red} icon={MdLogout} body=\"Wyloguj się\" />\r\n      </Column>\r\n\r\n      <Column className={classes.upload}>\r\n        <Text>Załaduj plik ze swoją produkcją (zip)</Text>\r\n        <CardLink onClick={uploadFile} color={atoms.colors.rest.green} icon={AiOutlineCloudUpload} body=\"Załaduj plik\" />\r\n      </Column>\r\n    </Surface>\r\n  )\r\n}\r\n\r\nconst useStyles = createStylesHook( ({ atoms }) => ({\r\n  integrationUserHeader: {\r\n    display: `flex`,\r\n    gap: atoms.spacing.main,\r\n    alignItems: `center`,\r\n    width: atoms.sizes.columnWidth,\r\n\r\n    [ atoms.breakpoints.bigMobile.mediaQueryMax ]: {\r\n      flexDirection: `column`,\r\n      textAlign: `center`,\r\n    },\r\n  },\r\n  avatar: {\r\n    borderRadius: `50%`,\r\n    border: `2px solid ${atoms.colors.rest.green}`,\r\n    padding: 2,\r\n  },\r\n  upload: {\r\n    [ atoms.breakpoints.bigMobile.mediaQueryMax ]: {\r\n      display: `none`,\r\n    },\r\n  },\r\n}) )\r\n","import MainLayout from \"@fet/layouts/MainLayout\"\r\nimport { IntegratedUserContextProvider } from \"@fet/discordIntegration/IntegratedUserContext\"\r\nimport DiscordLinking from \"@fet/discordIntegration/DiscordLinking\"\r\nimport DiscordIntegrationProtection from \"@fet/discordIntegration/DiscordIntegrationProtection\"\r\nimport JamProductionList from \"../sections/JamProductionsList\"\r\nimport IntegratedUserHeader from \"../sections/IntegratedUserHeader\"\r\n\r\nexport default function JamPage() {\r\n  return (\r\n    <MainLayout flow=\"column\">\r\n      <IntegratedUserContextProvider>\r\n        <DiscordIntegrationProtection fallback={<DiscordLinking />}>\r\n          <IntegratedUserHeader />\r\n        </DiscordIntegrationProtection>\r\n\r\n        <JamProductionList />\r\n      </IntegratedUserContextProvider>\r\n    </MainLayout>\r\n  )\r\n}\r\n"],"names":["DiscordIntegrationProtection","children","fallback","_jsx","isIntegrated","Row","className","justify","spaced","wrapping","classes","useRowStyles","justifyClassName","select","left","isJustifiedLeft","center","isJustifiedCenter","right","isJustifiedRight","isJustifiedSpaceBetween","fullClassName","cn","row","isSpaced","isWrapping","createStylesHook","display","flexDirection","alignItems","margin","justifyContent","gap","atoms","spacing","main","flexWrap","DiscordAvatar","username","userId","avatarId","src","alt","TextContainer","style","useTextContainerStyles","textContainer","marginTop","marginBottom","Column","verticallJustify","width","narrow","useStyles","normalTextContainer","verticallJustifyClassName","top","isVerticallyJustifiedTop","isVerticallyJustifiedCenter","bottom","isVerticallyJustifiedBottom","fullClassname","column","isNarrow","withWidth","test","flexGrow","Number","match","flexBasis","breakpoints","bigMobile","mediaQueryMax","Surface","surface","mixins","VotingPopup","category","title","scale","resolve","usePopupContext","popup","_jsxs","Text","as","body","Array","from","length","_","i","type","hidden","Button","variant","onClick","height","zIndex","backdropFilter","closeButton","VoteTile","score","notConsidered","onUpdateVote","createPopup","usePopupsContext","console","log","voteTile","then","name","borderWidth","padding","colors","rest","red","color","borderColor","primary","fontSize","Span","highlight","isHighlighted","categories","help","PopupCloseButton","props","ctx","Error","DescriptionPopup","defList","listTitle","listValue","list","listItem","overflow","marginLeft","paddingLeft","listStyle","textIndent","GamesListRow","orginalGame","game","onUpdate","useState","setGame","firstRenderRef","useRef","filename","user","votes","votesIsNotConsideredColor","Object","values","includes","updateVote","categoryName","g","useEffect","current","avatar","id","userData","map","c","description","download","href","getServerUrl","anchor","document","createElement","click","gridTemplate","jamProductionsList","sizes","columnWidth","gridArea","borderRadius","mobile","mediaQuery","getSessionToken","getWindow","_getWindow","localStorage","getItem","discordIntegrationStorageSessionKey","http","req","sessionToken","uri","getServerApiUrl","headers","JamProductionList","useArrayState","push","clear","fetchGames","Promise","all","backendHttp","itemsReqRes","votesReqRes","_ref2","votesRes","itemsRes","games","gamesWithVotes","find","v","gameId","impressions","readability","realisation","subject","IntegratedUserHeader","useIntegratedUserContext","logout","storage","_context","removeItem","discordIntegrationStorageUserKey","fetch","method","Authorization","navigate","uploadFile","r","input","accept","addEventListener","files","_context2","form","FormData","append","json","success","location","reload","integrationUserHeader","discriminator","CardLink","icon","MdLogout","upload","green","AiOutlineCloudUpload","textAlign","border","JamPage","MainLayout","flow","IntegratedUserContextProvider","DiscordLinking"],"sourceRoot":""}